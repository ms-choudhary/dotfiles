# set default shell
set-option -g default-shell /bin/zsh

# fix for vim shift+arrow keys not working
set-window-option -g xterm-keys on

# Turn on mouse support
setw -g mouse on

# improve colors
set -g default-terminal 'screen-256color'

# fix for copying in vim in unnamed register
#set-option -g default-command "reattach-to-user-namespace -l zsh"

## fixes where tmux rewrites the custom name set by the user
set-option -g allow-rename off

## fix for clear history
##bind -n C-o clear-history

## force reload config
bind-key r source-file ~/.tmux.conf\; display-message "~/.tmux.conf reloaded"

# copy paste and act like vim
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
#bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

## act like vim
#setw -g mode-keys vi
##bind h select-pane -L
##bind j select-pane -D
##bind k select-pane -U
##bind l select-pane -R
##bind-key -r C-h select-window -t :-
##bind-key -r C-l select-window -t :+


bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

##set -g prefix2 C-s

## start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1


## renumber windows sequentially after closing any of them
set -g renumber-windows on

## soften status bar color from harsh green to light gray
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'

## remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set -g status-right ''

## increase scrollback lines
set -g history-limit 1000000

## prefix -> back-one-character
bind-key C-b send-prefix
## prefix-2 -> forward-incremental-history-search
bind-key C-s send-prefix -2

## don't suspend-client
#unbind-key C-z

## Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

## Smart pane switching with awareness of Vim splits.
## See: https://github.com/christoomey/vim-tmux-navigator
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    #| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
#bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
#bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# smart pane switching with awareness of vim splits
# makes ctrl-j and ctrl-k navigate fzf search results when fzf active in pane
# providing the same behavior as ctrl-j and ctrl-k when navigating ctrl-p results
# inside vim.

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"

#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
#bind-key -T copy-mode-vi C-\ select-pane -l

bind-key Up resize-pane -U 25
bind-key Down resize-pane -D 25
bind-key Left resize-pane -L 25
bind-key Right resize-pane -R 25
